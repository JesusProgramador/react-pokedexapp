{"version":3,"sources":["components/Title.js","api.js","components/PokeForm.js","components/Pokemon.js","components/Pagination.js","components/Pokedex.js","App.js","index.js"],"names":["Title","className","src","alt","searchPokemon","pokemon","a","url","fetch","response","json","data","getPokemons","limit","offset","getPokemonData","useState","React","PokeForm","props","search","setSearch","setPokemon","onClick","e","type","placeholder","onChange","target","value","sprites","other","dream_world","front_default","name","id","types","map","index","Pokemon","Pagination","onLeftClick","onRightClick","page","totalPages","Pokedex","pokemons","setPage","total","nextPage","Math","max","min","useEffect","App","setPokemons","setTotal","loading","setLoading","fetchPokemons","promises","results","Promise","all","ceil","count","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aaf67f45.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Title = () => {\r\n\r\n    const imgUrl = \"https://raw.githubusercontent.com/PokeAPI/media/master/logo/pokeapi_256.png\";\r\n\r\n    return (\r\n\r\n        <div className=\"poke-title\">\r\n        <img\r\n          src = { imgUrl }\r\n          alt = \"pokeapi-logo\"\r\n        />\r\n        </div>\r\n    );\r\n}","export const searchPokemon = async(pokemon) => {\r\n    try {\r\n        let url = `https://pokeapi.co/api/v2/pokemon/${pokemon}`\r\n\r\n        const response = await fetch(url)\r\n        const data = await response.json()\r\n        return data\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const getPokemons = async(limit = 10, offset = 0) => {\r\n    try {\r\n        let url = `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`\r\n\r\n        const response = await fetch(url)\r\n        const data = await response.json()\r\n        return data\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const getPokemonData = async(url) => {\r\n    try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n\r\n    }\r\n}","import React from 'react';\r\nimport { searchPokemon } from '../api';\r\nconst { useState } = React;\r\n\r\n\r\n\r\nconst PokeForm = (props) => {\r\n  const [search, setSearch] = useState('');\r\n  const [pokemon, setPokemon] = useState();\r\n\r\n  const onChange = (e) => {\r\n    setSearch(e.target.value)\r\n  };\r\n\r\n  const onClick = async (e) => {\r\n    const data = await searchPokemon(search);\r\n    setPokemon(data);\r\n   }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"search-container\">\r\n        <div className=\"search\">\r\n          <input type=\"text\" placeholder=\"Buscar pokemon\" onChange={onChange} />\r\n        </div>\r\n\r\n        <div className=\"search-btn\">\r\n          <button onClick={onClick}>Buscar</button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Cuando le de a buscar un pokemon en especifico, me generara la carta de abajo con el pokemon y su info */}\r\n      <div>\r\n        {pokemon && (\r\n            <div className=\"card-main card-center\">\r\n              <img\r\n                src={pokemon.sprites.other.dream_world.front_default}\r\n                alt={pokemon.name}\r\n              />\r\n\r\n              <div className=\"pokemon-info\">\r\n                <p>Nombre: {pokemon.name}</p>\r\n                <span>#{pokemon.id}</span>\r\n              </div>\r\n\r\n              <div className=\"pokemon-type\">\r\n                {pokemon.types.map((type, index) => {\r\n                  return <div key={index}>{type.type.name}</div>;\r\n                })}\r\n              </div>\r\n            </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PokeForm;\r\n","import React from 'react';\r\n\r\nconst Pokemon = (props) => {\r\n    const { pokemon } = props\r\n\r\n    return (\r\n      <div className=\"card-main\">\r\n        <img\r\n          src={pokemon.sprites.other.dream_world.front_default}\r\n          alt={pokemon.name}\r\n        />\r\n\r\n        <div className=\"pokemon-info\">\r\n          <p>\r\n            Nombre: {pokemon.name}\r\n          </p>\r\n          <span>#{pokemon.id}</span>\r\n        </div>\r\n\r\n        <div className=\"pokemon-type\">\r\n          {pokemon.types.map((type, index) => {\r\n            return <div key={index}>{type.type.name}</div>;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Pokemon;","import React from 'react'\r\n\r\nconst Pagination = (props) => {\r\n\r\n    const {onLeftClick, onRightClick, page, totalPages} = props;\r\n\r\n    return (\r\n      <div className=\"pagination\">\r\n        <button className=\"btn-left\" onClick={onLeftClick}>{\"<\"}</button>\r\n        <div>{page} de {totalPages}</div>\r\n        <button className=\"btn-right\" onClick={onRightClick}>{\">\"}</button>\r\n      </div>\r\n    );\r\n }\r\n\r\n\r\nexport default Pagination;","import React from 'react';\r\n\r\nimport Pokemon from './Pokemon';\r\nimport Pagination from \"./Pagination\";\r\n\r\nconst Pokedex = (props) => {\r\n    const { pokemons, page, setPage, total } = props\r\n\r\n    const lastPage = () => {\r\n      const nextPage = Math.max(page - 1, 0);\r\n      setPage(nextPage);\r\n     };\r\n\r\n    const nextPage = () => {\r\n      const nextPage = Math.min(page + 1, total);\r\n      setPage(nextPage)\r\n     };\r\n\r\n    return (\r\n      <div className=\"pokedex-main-container\">\r\n        <div className=\"header\">\r\n          <h1>Pokedex</h1>\r\n          <Pagination\r\n            page={page + 1}\r\n            totalPages={total}\r\n            onLeftClick={lastPage}\r\n            onRightClick={nextPage}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"pokedex-grid\">\r\n          {pokemons.map((pokemon, index) => {\r\n              return (\r\n                <Pokemon pokemon={pokemon} key={pokemon.name} />\r\n              )\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n };\r\n\r\nexport default Pokedex;","import React from \"react\";\n\nimport \"./App.css\";\nimport \"bulma/css/bulma.css\";\n\nimport { Title } from \"./components/Title\";\nimport PokeForm  from \"./components/PokeForm\";\n\nimport Pokedex from './components/Pokedex';\nimport { getPokemonData, getPokemons } from \"./api\";\n\nconst { useState, useEffect } = React;\n\n\n\nexport default function App(){\n\n  const [pokemons, setPokemons] = useState([]);\n  const [page, setPage] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  const fetchPokemons = async () => { \n    try {\n      setLoading(true);\n      const data = await getPokemons(25, 25*page);\n\n      const promises = data.results.map(async (pokemon) => {\n        return await getPokemonData(pokemon.url);\n      });\n      const results = await Promise.all(promises);\n      \n      setPokemons(results);\n      setLoading(false);\n      setTotal(Math.ceil(data.count / 25))\n\n    } catch (error) {\n      \n    }\n   }\n\n  /* Cuando inicie la app la primera vez hara la peticion de traer todos los pokemones. El useEffect solo carga una vez cuando se carga la app */\n  useEffect(() => {  \n    fetchPokemons();\n  }, [page]) //Cuando haga un cambio en el page, cuando se cambie de page el fewtchPokemons hara una nueva peticion\n  \n    return (\n      <div className=\"App\">\n        <Title />\n        <div className=\"PokeForm-wrapper\">\n          <PokeForm />\n          \n          \n          {loading ? (\n            <div>Cargando pokemones...</div>\n          ) : (\n          /* Envia todos los pokemones a la pokedex */\n          <Pokedex \n            pokemons={pokemons}\n            page={page}\n            setPage={setPage}\n            total={total}\n          />\n          )}\n          \n        </div>\n      </div>\n    );\n  \n}\n  \n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}